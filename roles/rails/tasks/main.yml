- name: Create rails project
  command: rails new "{{ appname }}" --database=postgresql -j esbuild
  args:
    chdir: "{{ dest }}"

- name: Run bundle install
  command: bundle install
  args:
    chdir: "{{ dest }}/{{ appname }}"

- name: Run yarn install
  command: yarn install
  args:
    chdir: "{{ dest }}/{{ appname }}"

- name: Create github directory
  file:
    path: "{{ dest }}/{{ appname }}/.github/workflows"
    state: directory
    mode: "0755"

- name: Copy github dokku actions file to target directory
  template:
    src: github-actions/dokku.yml.j2
    dest: "{{ dest }}/{{ appname }}/.github/workflows/dokku.yml"

- name: Add yarn packages to dependencies
  command: yarn add {{ item }}
  with_items:
    - "react"
    - "react-dom"
    - "react-router-dom"
    - "react-query"
    - "react-hook-form"
    - "@react-google-maps/api"
    - "formik"
    - "yup"
    - "leaflet"
    - "@nanostores/react"
    - "react-leaflet"
    - "@stripe/stripe-js"
    - "@stripe/react-stripe-js"
    - "react-redux"
    - "@reduxjs/toolkit"
    - "@emotion/react"
    - "@emotion/styled"
  args:
    chdir: "{{ dest }}/{{ appname }}"

- name: Add yarn packages to devDependencies
  command: yarn add -D {{ item }}
  with_items:
    - "@testing-library/jest-dom"
    - "@testing-library/react"
    - "@testing-library/user-event"
    - "@types/jest"
    - "jsdom"
    - "vitest"
    - "sass"
  args:
    chdir: "{{ dest }}/{{ appname }}"

- name: Add gems
  command: bundle add {{ item }}
  with_items:
    - "devise"
    - "devise-jwt"
    - "rack-cors"
    - "active_model_serializers"
    - "kaminari"
    - "pundit"
    - "sidekiq"
    - "dotenv-rails"
    - "carrierwave"
    - "stripe"
    - "geocoder"
    - "graphql"
  args:
    chdir: "{{ dest }}/{{ appname }}"

- name: Add license field to package.json if not present
  lineinfile:
    path: "{{ dest }}/{{ appname }}/package.json"
    insertafter: '  "private": true,'  # Adjust this line if necessary
    line: '  "license": "MIT",'
    state: present

- name: Create the database
  command: rails db:create
  args:
    chdir: "{{ dest }}/{{ appname }}"

- name: Ensure build script includes --loader:.js=jsx
  command: npx json -I -f package.json -e 'this.scripts.build="esbuild app/javascript/*.* --bundle --sourcemap --format=esm --outdir=app/assets/builds --public-path=/assets --loader:.js=jsx"'
  args:
    chdir: "{{ dest }}/{{ appname }}"

- name: stimulus controller
  command: rails g stimulus konjic
  args:
    chdir: "{{ dest }}/{{ appname }}"

- name: fill out resulting stimulus controller
  copy:
    src:  rails/js/react_controller.js
    dest: "{{ dest }}/{{ appname }}/app/javascript/controllers/konjic_controller.js"



- name: Create Applications and counter directories
  file:
    path: "{{ dest }}/{{ appname }}/app/javascript/applications/Konjic"
    state: directory
    mode: "0755"

- name: Copy Counter component
  copy:
    src:  rails/js/counter.tsx
    dest: "{{ dest }}/{{ appname }}/app/javascript/applications/Konjic/App.tsx"

- name: create client controller
  command: rails g controller konjic index show
  args:
    chdir: "{{ dest }}/{{ appname }}"

- name: Create utils directory
  file:
    path: "{{ dest }}/{{ appname }}/app/javascript/utils"
    state: directory
    mode: "0755"

- name: Copy utils file
  copy:
    src: js/utils.ts
    dest: "{{ dest }}/{{ appname }}/app/javascript/utils/index.ts"

- name: Create constants directory
  file:
    path: "{{ dest }}/{{ appname }}/app/javascript/applications/konjic/constants"
    state: directory
    mode: "0755"

- name: Copy constants file
  copy:
    src: rails/js/constants.ts
    dest: "{{ dest }}/{{ appname }}/app/javascript/applications/konjic/constants/index.ts"

- name: Add react to html.erb pages
  copy:
    src: rails/react.html.erb
    dest: "{{ dest }}/{{ appname }}/app/views/konjic/{{ item }}"
  with_items:
    - "index.html.erb"
    - "show.html.erb"

- name: tidy up the created routes for index
  lineinfile:
    path: "{{ dest }}/{{ appname }}/config/routes.rb"
    regexp: "get 'konjic/index'"
    line: "  get 'konjic', to: 'konjic#index'"

- name: tidy up the created routes for show
  lineinfile:
    path:  "{{ dest }}/{{ appname }}/config/routes.rb"
    regexp: "get 'konjic/show'"
    line: "  get 'konjic/:show', to: 'konjic#show'"

- name: active storage install
  command: rails active_storage:install
  args:
    chdir: "{{ dest }}/{{ appname }}"

- name: Move Dockerfile
  command: mv "{{ dest }}/{{ appname }}"/Dockerfile "{{ dest }}/{{ appname }}"/Dockerfile.orig

- name: copy Makefile and Procfiles
  copy:
    src: "{{ item }}"
    dest: "{{ dest }}/{{ appname }}"
  with_items:
    - rails/Procfile.dev
    - rails/Procfile

- name: Copy Makefile
  template:
    src: rails/Makefile.j2
    dest: "{{ dest }}/{{ appname }}/Makefile"

- name: Copy Error pages
  copy:
    src: "{{ item }}"
    dest: "{{ dest }}/{{ appname }}/public"
  with_items:
    - rails/error-pages/404.html
    - rails/error-pages/422.html
    - rails/error-pages/500.html

- name: Run database migrations
  command: rails db:migrate
  args:
    chdir: "{{ dest }}/{{ appname }}"

- name: Seed the database
  command: rails db:seed
  args:
    chdir: "{{ dest }}/{{ appname }}"

- name: Set react_root fact
  set_fact:
    react_root: "{{ dest }}/{{ appname }}/app/javascript/applications/Konjic"
