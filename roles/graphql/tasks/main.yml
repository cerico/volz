- name: Set base dir
  set_fact:
    base: "{{ dest }}/{{ appname }}"

- name: Check if Gemfile exists
  stat:
    path: "{{ base }}/Gemfile"
  register: gemfile_stat

- name: Fail if Gemfile is missing
  fail:
    msg: "Gemfile is missing in {{ base }}"
  when: not gemfile_stat.stat.exists

- name: graphql install
  command: rails g graphql:install
  args:
    chdir: "{{ base }}"

- name: Run bundle install again after graphql added
  command: bundle install
  args:
    chdir: "{{ base }}"

- name: Add text above the line 'context = {'
  lineinfile:
    path: "{{ base }}/app/controllers/graphql_controller.rb"
    insertbefore: 'context = {'
    line: |
          session = Session.find_by(token: request.headers['Authorization'])

- name: Add text below the line 'context = {'
  lineinfile:
    path: "{{ base }}/app/controllers/graphql_controller.rb"
    insertafter: 'context = {'
    line: |
      time: Time.zone.now,
      current_user: session&.user,
      session_id: session&.id


- name: create user model
  command: rails g model User first_name:string last_name:string street:string number:string postcode:string city:string country:string email:string password_digest:string is_superadmin:boolean
  args:
    chdir: "{{ base }}"

- name: create session model
  command: rails g model Session user_id:integer token:string
  args:
    chdir: "{{ base }}"

- name: create post model
  command: rails g model Post user_id:integer body:text
  args:
    chdir: "{{ base }}"

- name: create comment model
  command: rails g model Comment post_id:integer body:text user_id:integer
  args:
    chdir: "{{ base }}"

- name: copy models
  copy:
    src:  "{{ item }}"
    dest: "{{ base }}/app/models"
  with_items:
    - "graphql/server/models/user.rb"
    - "graphql/server/models/post.rb"
    - "graphql/server/models/comment.rb"
    - "graphql/server/models/session.rb"

- name: copy graphql types
  copy:
    src: "{{ item }}"
    dest: "{{ base }}/app/graphql/types"
  with_items:
    - "graphql/server/types/user_type.rb"
    - "graphql/server/types/post_type.rb"
    - "graphql/server/types/comment_type.rb"
    - "graphql/server/types/query_type.rb"
    - 'graphql/server/types/mutation_type.rb'
    - 'graphql/server/types/error_type.rb'

- name: copy graphql mutations
  copy:
    src: "{{ item }}"
    dest: "{{ base }}/app/graphql/mutations"
  with_items:
    - "graphql/server/mutations/create_user.rb"
    - "graphql/server/mutations/create_post.rb"
    - "graphql/server/mutations/create_comment.rb"

- name: run db migrate
  command: rails db:migrate
  args:
    chdir: "{{ base }}"

- name: copy db seed
  copy:
    src: graphql/server/seeds.rb
    dest: "{{ base }}/db"

- name: run db seed
  command: rails db:seed
  args:
    chdir: "{{ base }}"
